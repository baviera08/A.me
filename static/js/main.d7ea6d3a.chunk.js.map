{"version":3,"sources":["portfolio/Footer.tsx","portfolio/Header.tsx","portfolio/Projects.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Footer","id","href","className","title","Header","src","Projects","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iRAgEeA,G,uBA7DA,WACb,OACE,oCACE,6BAASC,GAAG,UACV,yBAAKA,GAAG,aACN,wCACc,uBAAGC,KAAK,KAAR,WAEd,wBAAIC,UAAU,kBACZ,uBACEA,UAAU,8BACVC,MAAM,SACNF,KAAK,iCAEP,uBACEC,UAAU,4BACVC,MAAM,WACNF,KAAK,yCAEP,uBACEC,UAAU,4BACVC,MAAM,UACNF,KAAK,qCAIX,6BACE,2BACE,gDAEF,4BACE,4BACE,uBAAGA,KAAK,0CAAR,kBACA,yBAAKC,UAAU,WAAf,WAIN,6BACE,2BACE,yCAEF,4BACE,4BACE,uBAAGD,KAAK,IAAR,WAIN,6BACE,2BACE,4CAEF,4BACE,4BACE,uBAAGA,KAAK,IAAR,eCpCCG,G,KAjBA,WACb,OACE,6BACE,yBAAKF,UAAU,mBACb,yBAAKG,IAAI,2BACT,6CACA,+DACwC,IACtC,uBAAGJ,KAAK,+BACN,4BAAQC,UAAU,UAAlB,YACG,SCmCAI,EA5CE,WAEf,OACE,oCACE,gDACA,yBAAKN,GAAG,YACR,yBAAKA,GAAG,YACN,kBAAC,EAAD,MACA,yBAAKE,UAAS,uBACZ,yBAAKA,UAAU,aAAaG,IAAI,2CAChC,yBAAKH,UAAU,eACb,4BACE,uBAAGD,KAAK,iCAAR,uBADF,WAEE,uBACEC,UAAU,8BACVC,MAAM,SACNF,KAAK,4CAGT,4BACG,IADH,2FAKA,sHAIA,6BACA,2BACE,0BAAMC,UAAU,OAAhB,SACA,0BAAMA,UAAU,OAAhB,cACA,0BAAMA,UAAU,OAAhB,WACA,0BAAMA,UAAU,OAAhB,QACA,0BAAMA,UAAU,OAAhB,UACA,0BAAMA,UAAU,OAAhB,oBCvBCK,MATf,WACE,OACE,yBAAKL,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCcM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d7ea6d3a.chunk.js","sourcesContent":["import React from 'react';\nimport './Footer.scss';\n\nconst Footer = () => {\n  return (\n    <>\n      <section id=\"footer\">\n        <div id=\"copyright\">\n          <p>\n            &copy; 2020 <a href=\"/\">Matias</a>\n          </p>\n          <h2 className=\"social-section\">\n            <a\n              className=\"uil uil-github light-violet\"\n              title=\"Github\"\n              href=\"https://github.com/baviera08\"\n            ></a>\n            <a\n              className=\"uil uil-linkedin dark-sky\"\n              title=\"LinkedIn\"\n              href=\"https://linkedin.com/in/matiasbavera\"\n            ></a>\n            <a\n              className=\"uil uil-twitter light-sky\"\n              title=\"Twitter\"\n              href=\"https://twitter.com/matibavera\"\n            ></a>\n          </h2>\n        </div>\n        <div>\n          <p>\n            <strong>Open Source</strong>\n          </p>\n          <ul>\n            <li>\n              <a href=\"https://github.com/osrf/romi-dashboard\">romi-dashboard</a>\n              <div className=\"tooltip\">test</div>\n            </li>\n          </ul>\n        </div>\n        <div>\n          <p>\n            <strong>Apps</strong>\n          </p>\n          <ul>\n            <li>\n              <a href=\"\">Test</a>\n            </li>\n          </ul>\n        </div>\n        <div>\n          <p>\n            <strong>Doodles</strong>\n          </p>\n          <ul>\n            <li>\n              <a href=\"\">Test</a>\n            </li>\n          </ul>\n        </div>\n      </section>\n    </>\n  );\n};\nexport default Footer;\n","import React from 'react';\nimport './Projects.scss';\n\nconst Header = () => {\n  return (\n    <div>\n      <div className=\"profile enhance\">\n        <img src=\"/resources/profile.png\" />\n        <h2>Matias Bavera</h2>\n        <p>\n          Full Stack Software Engineer &middot;{' '}\n          <a href=\"https://www.ekumenlabs.com/\">\n            <strong className=\"ekumen\">@Ekumen</strong>\n          </a>{' '}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, {useState} from 'react';\nimport './Projects.scss';\nimport Header from './Header';\n\nconst Projects = () => {\n\n  return (\n    <>\n      <title>Matias Bavera</title>\n      <div id=\"display\"></div>\n      <div id=\"projects\">\n        <Header />\n        <div className={`large right project`}>\n          <img className=\"screenshot\" src=\"/resources/pictures/romi-dashboard.png\" />\n          <div className=\"description\">\n            <h2>\n              <a href=\"https://www.openrobotics.org/\">RoMi Dashboard OSRF</a>&nbsp;&middot;\n              <a\n                className=\"uil uil-github light-violet\"\n                title=\"Github\"\n                href=\"https://github.com/osrf/romi-dashboard\"\n              ></a>\n            </h2>\n            <h6>\n              {' '}\n              Web application that provides overall visualization and control over the RoMi-H\n              system.\n            </h6>\n            <p>\n              Web application that provides overall visualization and control over the RoMi-H\n              system.\n            </p>\n            <br />\n            <p>\n              <span className=\"tag\">React</span>\n              <span className=\"tag\">TypeScript</span>\n              <span className=\"tag\">Leaflet</span>\n              <span className=\"tag\">Ros2</span>\n              <span className=\"tag\">Nodejs</span>\n              <span className=\"tag\">Websockets</span>\n            </p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Projects;\n","import React from 'react';\nimport './App.scss';\nimport './shared/oui/main.sass';\n\nimport Footer from './portfolio/Footer';\nimport Projects from './portfolio/Projects';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Projects />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}